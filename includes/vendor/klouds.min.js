/* MIT License https://github.com/skyrim/klouds */
!function(e, o) {
    "object" == typeof exports && "object" == typeof module ? module.exports = o() : "function" == typeof define && define.amd ? define([], o) : "object" == typeof exports ? exports.klouds = o() : e.klouds = o()
}(self, (() => (() => {
    "use strict";
    var e = {
            486: (e, o, r) => {
                r.r(o),
                r.d(o, {
                    default: () => t
                });
                const t = "precision mediump float;\n\nuniform vec2 resolution;\nuniform float layerCount;\nuniform float time;\nuniform vec3 bgColor;\nuniform vec3 cloudColor1;\nuniform vec3 cloudColor2;\n\n#define TAU 6.28318530718\n\nfloat func(float pX) {\n    return 0.6 * (0.5 * sin(0.1 * pX) + 0.5 * sin(0.553 * pX) + 0.7 * sin(1.2 * pX));\n}\n\nfloat funcR(float pX) {\n    return 0.5 + 0.25 * (1.0 + sin(mod(40.0 * pX, TAU)));\n}\n\nfloat layer(vec2 pQ, float pT) {\n    vec2 Qt = 3.5 * pQ;\n    pT *= 0.5;\n    Qt.x += pT;\n\n    float Xi = floor(Qt.x);\n    float Xf = Qt.x - Xi - 0.5;\n\n    vec2 C;\n    float Yi;\n    float D = 1.0 - step(Qt.y,  func(Qt.x));\n\n    Yi = func(Xi + 0.5);\n    C = vec2(Xf, Qt.y - Yi ); \n    D =  min(D, length(C) - funcR(Xi + pT / 80.0));\n\n    Yi = func(Xi + 1.0 + 0.5);\n    C = vec2(Xf - 1.0, Qt.y - Yi ); \n    D =  min(D, length(C) - funcR(Xi + 1.0+ pT / 80.0));\n\n    Yi = func(Xi - 1.0 + 0.5);\n    C = vec2(Xf + 1.0, Qt.y - Yi ); \n    D =  min(D, length(C) - funcR(Xi - 1.0 + pT / 80.0));\n\n    return min(1.0, D);\n}\n\nvoid main() {\n    float t = time;\n    vec2 UV = 2.0 * (gl_FragCoord.xy - resolution.xy / 2.0) / min(resolution.x, resolution.y);\t\n    \n    vec3 Color = bgColor;\n\n    for(float i = 0.0; i < 0.8; i += 0.1) {\n        if (i >= layerCount) {\n            break;\n        }\n\n        float Lt =  t * (0.5 + 2.0 * i) * (1.0 + 0.1 * sin(226.0 * i)) + 1000.0 * i;\n        vec2 Lp = vec2(100.0 * i, 0.8 * (i / (layerCount - 0.0999) / 0.8) - 0.3);\n        float L = layer(UV + Lp, Lt);\n\n        float Blur = 4.0 * (0.5 * abs(2.0 - 5.0 * i)) / (11.0 - 5.0 * i);\n\n        float V = mix(0.0, 1.0, 1.0 - smoothstep(0.0, 0.01 + 0.2 * Blur, L));\n        vec3 Lc = mix(cloudColor1, cloudColor2, i / (layerCount - 0.0999) / 0.8);\n\n        Color = mix(Color, Lc,  V);\n    }\n\n    gl_FragColor = vec4(Color, 1.0);\n}\n"
            },
            623: (e, o, r) => {
                r.r(o),
                r.d(o, {
                    default: () => t
                });
                const t = "attribute vec3 position;\n\nvoid main() {\n    gl_Position = vec4(position, 1.0);\n}\n"
            },
            211: (e, o) => {
                var r;
                function t(e, o, t) {
                    var n = o === r.VERTEX ? e.createShader(e.VERTEX_SHADER) : e.createShader(e.FRAGMENT_SHADER);
                    return n ? (e.shaderSource(n, t), e.compileShader(n), e.getShaderParameter(n, e.COMPILE_STATUS) ? n : (console.debug(e.getShaderInfoLog(n)), console.error("Failed to compile WebGL shader"), e.deleteShader(n), null)) : (console.error("Failed to create WebGL shader"), null)
                }
                Object.defineProperty(o, "__esModule", {
                    value: !0
                }),
                o.ShaderType = void 0,
                o.createContext = function(e) {
                    return e.getContext("webgl")
                },
                o.createShader = t,
                o.createProgram = function(e, o, n, i, a) {
                    var l = e.createProgram();
                    if (!l)
                        return console.error("Failed to create WebGL program"), null;
                    var u = t(e, r.VERTEX, o),
                        s = t(e, r.FRAGMENT, n);
                    if (!u || !s)
                        return console.error("Failed to create a shader while creating a program"), null;
                    if (e.attachShader(l, u), e.attachShader(l, s), e.linkProgram(l), e.validateProgram(l), !e.getProgramParameter(l, e.LINK_STATUS))
                        return e.deleteProgram(l), e.deleteShader(u), e.deleteShader(s), console.error("Failed to link WebGL program"), console.debug(e.getProgramInfoLog(l)), null;
                    if (!e.getProgramParameter(l, e.VALIDATE_STATUS))
                        return e.deleteProgram(l), e.deleteShader(u), e.deleteShader(s), console.error("Failed to validate WebGL program"), console.debug(e.getProgramInfoLog(l)), null;
                    for (var c = {}, f = 0; f < i.length; ++f) {
                        var d = i[f],
                            p = e.getAttribLocation(l, d);
                        if (-1 === p)
                            return console.error('Program attribute named "'.concat(d, "\" doesn't exist")), e.deleteProgram(l), null;
                        c[d] = p
                    }
                    var m = {};
                    for (f = 0; f < a.length; ++f) {
                        var h = a[f],
                            g = e.getUniformLocation(l, h);
                        if (null === g)
                            return console.error('Program uniform named "'.concat(h, "\" doesn't exist")), e.deleteProgram(l), null;
                        m[h] = g
                    }
                    return {
                        handle: l,
                        attributes: c,
                        uniforms: m
                    }
                },
                o.resizeCanvasToDisplaySize = function(e) {
                    var o = e.clientWidth,
                        r = e.clientHeight;
                    return (e.width !== o || e.height !== r) && (e.width = o, e.height = r, !0)
                },
                function(e) {
                    e[e.VERTEX = 0] = "VERTEX",
                    e[e.FRAGMENT = 1] = "FRAGMENT"
                }(r || (o.ShaderType = r = {}))
            }
        },
        o = {};
    function r(t) {
        var n = o[t];
        if (void 0 !== n)
            return n.exports;
        var i = o[t] = {
            exports: {}
        };
        return e[t](i, i.exports, r), i.exports
    }
    r.d = (e, o) => {
        for (var t in o)
            r.o(o, t) && !r.o(e, t) && Object.defineProperty(e, t, {
                enumerable: !0,
                get: o[t]
            })
    },
    r.o = (e, o) => Object.prototype.hasOwnProperty.call(e, o),
    r.r = e => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(e, "__esModule", {
            value: !0
        })
    };
    var t = {};
    return (() => {
        var e = t;
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.Klouds = e.VERSION = void 0,
        e.create = function(e) {
            return new l(e)
        };
        var o = r(623),
            n = r(486),
            i = r(211);
        function a(e) {
            var o = [0, 0, 0];
            return "string" == typeof e ? function(e) {
                var o = document.createElement("div");
                o.style.display = "none",
                o.style.color = e,
                document.body.appendChild(o);
                var r = (getComputedStyle(o).color || "rgb(0, 0, 0)").match(/[+-]?\d+(\.\d+)?/g),
                    t = r ? r.map((function(e) {
                        return parseInt(e, 10)
                    })) : [0, 0, 0];
                if (o.parentElement && o.parentElement.removeChild(o), t.length > 3)
                    t.length = 3;
                else if (t.length < 3)
                    return [0, 0, 0];
                return t
            }(e).forEach((function(e, r) {
                o[r] = e / 255
            })) : Array.isArray(e) && 3 === e.length && e.slice(0, 3).forEach((function(e, r) {
                o[r] = e / 255
            })), o
        }
        e.VERSION = "3.0.0";
        var l = function() {
            function e(e) {
                var o = this;
                this.isRunning = !1,
                this.accumTime = 0,
                this.lastTime = performance.now(),
                this.render = function(e) {
                    var r = o.gl,
                        t = o.program,
                        n = o.buffer,
                        a = (e - o.lastTime) * o.speed * .001;
                    o.accumTime += a,
                    o.lastTime = e,
                    (0, i.resizeCanvasToDisplaySize)(o.canvas),
                    r.viewport(0, 0, r.canvas.width, r.canvas.height),
                    r.useProgram(t.handle),
                    r.bindBuffer(r.ARRAY_BUFFER, n);
                    var l = t.attributes.position;
                    r.enableVertexAttribArray(l),
                    r.vertexAttribPointer(l, 3, r.FLOAT, !1, 0, 0),
                    r.uniform2f(t.uniforms.resolution, r.canvas.width, r.canvas.height),
                    r.uniform1f(t.uniforms.layerCount, o.layerCount),
                    r.uniform1f(t.uniforms.time, o.accumTime),
                    r.uniform3fv(t.uniforms.bgColor, o.bgColor),
                    r.uniform3fv(t.uniforms.cloudColor1, o.cloudColor1),
                    r.uniform3fv(t.uniforms.cloudColor2, o.cloudColor2),
                    r.drawArrays(r.TRIANGLES, 0, 6),
                    o.isRunning && requestAnimationFrame(o.render)
                };
                var r = this.queryRootElement(e.selector);
                if (!r)
                    throw new Error("Invalid options.selector value passed to Klouds");
                this.canvas = r;
                var t = e.speed || 1,
                    n = e.layerCount || 5,
                    a = e.cloudColor1 || [25, 178, 204],
                    l = e.cloudColor2 || [255, 255, 255],
                    u = e.bgColor || [0, 102, 128];
                r.style.width = "100%",
                r.style.height = "100%",
                this.initGraphics(r),
                this.setSpeed(t),
                this.setLayerCount(n),
                this.setBgColor(u),
                this.setCloudColor1(a),
                this.setCloudColor2(l),
                this.start()
            }
            return e.prototype.queryRootElement = function(e) {
                if ("string" == typeof e) {
                    var o = document.querySelector(e);
                    return o ? o instanceof HTMLCanvasElement ? o : (console.error("options.selector element is not a <canvas> element"), null) : (console.error("options.selector element not found"), null)
                }
                return e instanceof HTMLElement ? e instanceof HTMLCanvasElement ? e : (console.error("options.selector element is not a <canvas> element"), null) : (console.error("options.selector value is invalid"), null)
            }, e.prototype.initGraphics = function(e) {
                var r = (0, i.createContext)(e);
                if (!r)
                    throw new Error("Failed to create WebGL context");
                var t = (0, i.createProgram)(r, o.default, n.default, ["position"], ["resolution", "layerCount", "time", "bgColor", "cloudColor1", "cloudColor2"]);
                if (!t)
                    throw new Error("Failed to create WebGL program");
                var a = r.createBuffer();
                if (!a)
                    throw r.deleteProgram(t), new Error("Failed to create WebGL buffer");
                var l = t.attributes.position;
                r.enableVertexAttribArray(l),
                r.vertexAttribPointer(l, 3, r.FLOAT, !1, 0, 0),
                r.bindBuffer(r.ARRAY_BUFFER, a),
                r.bufferData(r.ARRAY_BUFFER, new Float32Array([[-1, -1, 0], [1, -1, 0], [-1, 1, 0], [-1, 1, 0], [1, -1, 0], [1, 1, 0]].reduce((function(e, o) {
                    return e.concat(o)
                }), [])), r.STATIC_DRAW),
                this.gl = r,
                this.program = t,
                this.buffer = a
            }, e.prototype.start = function() {
                this.isRunning || (this.isRunning = !0, requestAnimationFrame(this.render))
            }, e.prototype.stop = function() {
                this.isRunning = !1
            }, e.prototype.setSpeed = function(e) {
                this.speed = Math.max(-100, Math.min(100, e))
            }, e.prototype.setCloudColor1 = function(e) {
                var o = a(e);
                o && (this.cloudColor1 = o)
            }, e.prototype.setCloudColor2 = function(e) {
                var o = a(e);
                o && (this.cloudColor2 = o)
            }, e.prototype.setBgColor = function(e) {
                var o = a(e);
                o && (this.bgColor = o)
            }, e.prototype.setLayerCount = function(e) {
                this.layerCount = Math.max(1, Math.min(8, e)) / 10
            }, e.prototype.getSpeed = function() {
                return this.speed
            }, e.prototype.getLayerCount = function() {
                return this.layerCount
            }, e.prototype.getBgColor = function() {
                return this.bgColor.slice()
            }, e.prototype.getCloudColor1 = function() {
                return this.cloudColor1.slice()
            }, e.prototype.getCloudColor2 = function() {
                return this.cloudColor2.slice()
            }, e
        }();
        e.Klouds = l,
        window && void 0 !== window.jQuery && (window.jQuery.fn.Klouds = function(e) {
            e = e || {};
            for (var o = this.get(), r = [], t = 0; t < o.length; ++t)
                e.selector = o[t],
                r.push(new l(e));
            return r
        })
    })(), t
})()));
